trigger:
- main

resources:
  repositories:
  - repository: FoodTourServerGitHub   
    type: github
    name: coderscool/FoodTourServer
    endpoint: FoodTour-Github  

variables:
  # Container registry service connection
  dockerRegistryServiceConnection: 'foodtourserveracr'
  imageRepository: 'coderscoolfoodtourserver'
  containerRegistry: 'foodtourserveracr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'foodtourserveracr6661450a-auth'

  chartPath: 'K8s'
  aksServiceConnection: 'foodtourserver-aks-default'
  azureResourceGroup: 'foodtourserver-rg'
  aksCluster: 'foodtourserver-aks'
  releaseName: 'foodtourserver'
  namespace: 'default'

pool:
  name: 'FoodTourPool'

stages:
- stage: Build
  displayName: Build and Push Images
  jobs:
  - job: Build
    pool:
      name: 'FoodTourPool'
    steps:
    - checkout: FoodTourServerGitHub   
      persistCredentials: true

    - task: Docker@2
      displayName: Build and Push web-api
      inputs:
        command: buildAndPush
        repository: web-api
        dockerfile: WebApplication1/Dockerfile
        buildContext: .
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(Build.BuildId)

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - deployment: Deploy
    environment: 'FoodTourServer'
    pool:
      name: 'FoodTourPool'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            persistCredentials: true

          # Đảm bảo có unzip và jq
          - script: |
              sudo apt-get update
              sudo apt-get install -y unzip jq
            displayName: 'Install unzip & jq'

          # Cài Helm nếu chưa có
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          # Check trạng thái release trước khi upgrade
          - script: |
              set -e
              release="$(releaseName)"
              namespace="$(namespace)"

              echo "=== Check Helm release status ==="
              helm list -n $namespace || true

              STATUS=$(helm status $release -n $namespace -o json | jq -r '.info.status' 2>/dev/null || echo "notfound")

              echo "Release status: $STATUS"

              if [[ "$STATUS" == pending* ]]; then
                echo "⚠️ Release đang pending → uninstall trước khi deploy lại..."
                helm uninstall $release -n $namespace || true
              fi
            displayName: "Check & Cleanup Helm release"

          # Test kết nối cluster
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'foodtour-prod-conn'
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(aksCluster)
              command: get
              arguments: pods -n $(namespace)

          # Helm upgrade / install
          - task: HelmDeploy@0
            displayName: Helm upgrade/install
            inputs:
              connectionType: 'Azure Resource Manager'
              kubernetesServiceConnection: $(aksServiceConnection)
              azureResourceGroup: $(azureResourceGroup)
              kubernetesCluster: $(aksCluster)
              namespace: $(namespace)
              command: upgrade
              chartType: FilePath
              chartPath: $(chartPath)
              releaseName: $(releaseName)
              install: true
              arguments: >
                --set web-api.image=$(containerRegistry)/web-api:$(Build.BuildId)
                --set domain=api.foodtourserver.com
                --timeout 30m

          